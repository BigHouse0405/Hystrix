apply plugin: 'osgi'

configurations {
    ajtools
    ajcTestCompile.extendsFrom testCompile
    ajcTestRuntime.extendsFrom testRuntime
    ajc
}


sourceSets {
    ajcTest {
        compileClasspath += main.output + test.output
        runtimeClasspath += main.output + test.output
    }

    ajc {
        def main = sourceSets.main
        java.srcDirs = main.java.srcDirs
        resources.srcDirs = main.resources.srcDirs
        compileClasspath = main.compileClasspath
        runtimeClasspath = main.runtimeClasspath
    }
}



compileAjcTestJava {

    sourceCompatibility = "1.6"
    targetCompatibility = "1.6"

    doLast {
        ant.taskdef(resource: "org/aspectj/tools/ant/taskdefs/aspectjTaskdefs.properties", classpath: configurations.ajtools.asPath)
        ant.iajc(source: "1.6", target: "1.6",
                destDir: "${sourceSets.ajcTest.output.classesDir.absolutePath}", maxmem: "512m", fork: "true",
                classpath: "${sourceSets.main.output.classesDir.absolutePath};${configurations.testCompile.asPath}")
                {
                    sourceroots {
                        files("src/ajcTest/java/com/netflix/hystrix/contrib/javanica/test/aspectj", "src/test/java/com/netflix/hystrix/contrib/javanica/test/common", "src/main/java/com/netflix/hystrix/contrib/javanica/aop/aspectj").each {
                            File file -> pathelement(location: file.absolutePath)
                        }
                    }
                }
    }

}

compileAjcJava {
    sourceCompatibility = "1.6"
    targetCompatibility = "1.6"

    doLast {
        ant.taskdef(resource: "org/aspectj/tools/ant/taskdefs/aspectjTaskdefs.properties", classpath: configurations.ajtools.asPath)
        ant.iajc(source: "${sourceCompatibility}", target: "${targetCompatibility}",
                destDir: "${sourceSets.ajc.output.classesDir.absolutePath}", maxmem: "512m", fork: "true", "showWeaveInfo": "true",
                classpath: "${configurations.compile.asPath}")

                {
                    sourceroots {
                        sourceSets.ajc.java.srcDirs.each {
                            pathelement(location: it.absolutePath)

                        }
                    }
                }
    }
}

task ajcTest(type: Test) {
    testClassesDir = sourceSets.ajcTest.output.classesDir
    classpath = sourceSets.ajcTest.runtimeClasspath
    if (System.getProperty('DEBUG', 'false') == 'true') {
        jvmArgs '-Xdebug',
                '-Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=9009'
    }
}

check.dependsOn test, ajcTest


ext {
    aspectjVersion = '1.8.6'
}


task ajcJar(type: Jar) {
    archiveName = "${project.name}" + "-ctw-${version}.jar"
    destinationDir = file("${buildDir}/libs")
    from sourceSets.ajc.output
}

assemble.dependsOn(jar, ajcJar)

dependencies {
    compile project(':hystrix-core')
    ajtools "org.aspectj:aspectjtools:$aspectjVersion"
    testRuntime "org.aspectj:aspectjrt:$aspectjVersion"
    compile "org.aspectj:aspectjweaver:$aspectjVersion"
    compile "org.aspectj:aspectjrt:$aspectjVersion"

    compile 'com.google.guava:guava:15.0'
    compile 'commons-collections:commons-collections:3.2.2'
    compile 'org.apache.commons:commons-lang3:3.1'
    compile 'com.google.code.findbugs:jsr305:2.0.0'
    compile 'org.ow2.asm:asm:5.0.4'
    testCompile 'junit:junit-dep:4.10'
    testCompile 'org.springframework:spring-core:4.0.0.RELEASE'
    testCompile 'org.springframework:spring-context:4.0.0.RELEASE'
    testCompile 'org.springframework:spring-aop:4.0.0.RELEASE'
    testCompile 'org.springframework:spring-test:4.0.0.RELEASE'
    testCompile 'cglib:cglib:3.1'
    testCompile 'org.mockito:mockito-all:1.9.5'
    testCompile 'log4j:log4j:1.2.17'
    testCompile 'org.slf4j:slf4j-log4j12:1.7.7'
    testCompile 'com.tngtech.java:junit-dataprovider:1.10.2'
}
